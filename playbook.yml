---
- name: старт
  hosts: all
  become: true
  vars:
    backup_server_ip: "192.168.56.15"
    borg_user: "borg"
    borg_passphrase: "Otus1234"
    client_backup_target: "/etc"
    backup_repo: "borg@{{ backup_server_ip }}:/var/backup"

  tasks:
    - name: Установка borg
      apt:
        name: borgbackup
        state: present
        update_cache: yes

- name: Настройка сервера
  hosts: backup
  become: true
  vars:
    backup_server_ip: "192.168.56.15"
    borg_user: "borg"
    borg_passphrase: "Otus1234"
    client_backup_target: "/etc"
    backup_repo: "borg@{{ backup_server_ip }}:/var/backup"
    backup_dir: "/var/backup"

  tasks:
    - name: пользователь borg
      user:
        name: "{{ borg_user }}"
        state: present
        shell: /bin/bash

    - name: каталог
      file:
        path: "{{ backup_dir }}"
        state: directory
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0755'

    - name: ssh borg
      file:
        path: "/home/{{ borg_user }}/.ssh"
        state: directory
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0700'

    - name: файл ключей
      file:
        path: "/home/{{ borg_user }}/.ssh/authorized_keys"
        state: touch
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0600'

- name: Настройка клиента
  hosts: client
  become: true
  vars:
    backup_server_ip: "192.168.56.15"
    borg_user: "borg"
    borg_passphrase: "Otus1234"
    client_backup_target: "/etc"
    backup_repo: "borg@{{ backup_server_ip }}:/var/backup"

  tasks:
    - name: idrsa
      openssh_keypair:
        path: /root/.ssh/id_rsa
        size: 2048
        type: rsa
        force: no

    - name: копирование ключа
      command: cat /root/.ssh/id_rsa.pub
      register: ssh_pub_key
      failed_when: ssh_pub_key.stdout == ""

    - name: закидывание ключа на сервер бекап
      authorized_key:
        user: "{{ borg_user }}"
        state: present
        key: "{{ ssh_pub_key.stdout }}"
      delegate_to: "{{ backup_server_ip }}"
      become: true

    - name: инициализация репы
      become_user: root
      command: borg init --encryption=repokey {{ backup_repo }}
      environment:
        BORG_PASSPHRASE: "{{ borg_passphrase }}"
      register: borg_init
      ignore_errors: yes
      when: borg_init is not defined

    - name: тест бекап
      become_user: root
      command: borg create --stats --list {{ backup_repo }}::"etc-{now:%Y-%m-%d_%H:%M:%S}" {{ client_backup_target }}
      environment:
        BORG_PASSPHRASE: "{{ borg_passphrase }}"

    - name: сервис
      become_user: root
      copy:
        dest: /etc/systemd/system/borg-backup.service
        content: |
          [Unit]
          Description=Borg Backup

          [Service]
          Type=oneshot
          Environment="BORG_PASSPHRASE={{ borg_passphrase }}"
          Environment=REPO={{ backup_repo }}
          Environment=BACKUP_TARGET={{ client_backup_target }}
          ExecStart=/bin/borg create --stats ${REPO}::etc-{now:%Y-%m-%d_%H:%M:%S} ${BACKUP_TARGET}
          ExecStart=/bin/borg check ${REPO}
          ExecStart=/bin/borg prune --keep-daily 90 --keep-monthly 12 --keep-yearly 1 ${REPO}


    - name: таймер
      become_user: root
      copy:
        dest: /etc/systemd/system/borg-backup.timer
        content: |
          [Unit]
          Description=Borg Backup

          [Timer]
          OnUnitActiveSec=5min

          [Install]
          WantedBy=timers.target

    - name: Вкл таймера
      become_user: root
      systemd:
        name: borg-backup.timer
        enabled: yes
        state: started

